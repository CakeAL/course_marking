//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "course_info")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub course_code: String,
    pub course_name: String,
    pub teacher: Option<String>,
    pub credits: Option<i32>,
    pub course_type: Option<String>,
    #[sea_orm(column_type = "Double", nullable)]
    pub marking: Option<f64>,
    pub is_attendance: Option<String>,
    pub homework: Option<String>,
    pub exam: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::comments::Entity")]
    Comments,
}

impl Related<super::comments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Comments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
